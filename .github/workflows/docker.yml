# This workflow builds, scans, adds set of tags on every push/PR to main branch
# and pushes the image to docker hub(only): https://hub.docker.com/repository/docker/persistenceone/persistencecore/
name: Docker CI

on:
  push:
    branches:
      - manasi/docker-ci
  release:
    types: [published]

env:
  #Tags
  DOCKER_IMAGE_PATH: persistenceone/persistencecore
  IMAGE_VERSION_TAG: ${{ 'v6.1.0' || github.event.release.tag_name }}
  RELEASE_TAG:  latest
  DOCKER_FILE_PATH: docker/persistencecore/Dockerfile

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Get short commit SHA
        id: get-commit
        run: echo "commit-sha=$(git rev-parse --short ${{ github.sha }})" >> $GITHUB_OUTPUT
#        run: |
#          if [ "$EVENT" == 'release' ]
#          then
#            echo "commit-sha=$(git rev-parse --short ${{ github.sha }})" >> $GITHUB_OUTPUT
#          fi
        env:
          EVENT: ${{ github.event_name }}
          REF: ${{ github.ref }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set current date to Github Output
        id: get_date
        run: echo "current_date=$(date +'%Y-%m-%dT%H-%M')" >> $GITHUB_OUTPUT

      # NOTE: By default, default action:docker/build-push-action pushes image to Docker hub if registry is not specified
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{env.DOCKER_IMAGE_PATH}}:${{env.IMAGE_VERSION_TAG}},${{env.DOCKER_IMAGE_PATH}}:${{env.RELEASE_TAG}},
                ${{env.DOCKER_IMAGE_PATH}}:${{steps.get_date.outputs.current_date}},
                ${{env.DOCKER_IMAGE_PATH}}:${{ steps.get-commit.outputs.commit-sha }}
          file: ${{env.DOCKER_FILE_PATH}}
          platforms: linux/amd64

      # Scan & report docker image scan-vulnerabilities to GitHub Code Scanning
      - name: Run Snyk to check Docker image for vulnerabilities
        continue-on-error: true
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ${{env.DOCKER_IMAGE_PATH}}:${{env.IMAGE_VERSION_TAG}}
          args: --file=${{env.DOCKER_FILE_PATH}}

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif